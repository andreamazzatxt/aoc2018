{
  "version": 3,
  "sources": ["../../src/day09/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\"\n\nconst parseInput = (rawInput: string) =>\n  rawInput.split(\" \").filter(Number).map(Number)\n\nclass Marble {\n  value: number\n  prev: Marble\n  next: Marble\n  constructor(value: number) {\n    this.value = value\n    this.prev = this\n    this.next = this\n  }\n  concat(marble: Marble): void {\n    this.next.prev = marble\n    marble.next = this.next\n    marble.prev = this\n    this.next = marble\n  }\n  destroy(): void {\n    this.prev.next = this.next\n    this.next.prev = this.prev\n  }\n}\nclass Circle {\n  currentMarble: Marble\n  head: Marble\n\n  constructor() {\n    this.currentMarble = new Marble(0)\n    this.head = this.currentMarble\n  }\n\n  add(marble: number): number {\n    if (marble % 23 === 0) {\n      const marbleToRemove =\n        this.currentMarble.prev.prev.prev.prev.prev.prev.prev\n      this.currentMarble = marbleToRemove.next\n      const removed = marbleToRemove.value\n      marbleToRemove.destroy()\n      return marble + removed\n    }\n    const marbleToInsert = new Marble(marble)\n    const next = this.currentMarble.next\n    next.concat(marbleToInsert)\n    this.currentMarble = marbleToInsert\n    return 0\n  }\n}\nconst part1 = (rawInput: string) => {\n  const [playersCount, marblesCount] = parseInput(rawInput)\n  const players = new Array(playersCount).fill(0)\n  const circle = new Circle()\n  for (let marble = 1; marble <= marblesCount; marble++) {\n    const player = marble % playersCount\n    players[player] += circle.add(marble)\n  }\n  return Math.max(...players)\n}\n\nconst part2 = (rawInput: string) => {\n  const [playersCount, marblesCount] = parseInput(rawInput)\n  const players = new Array(playersCount).fill(0)\n  const circle = new Circle()\n  for (let marble = 1; marble <= marblesCount * 100; marble++) {\n    const player = marble % playersCount\n    players[player] += circle.add(marble)\n  }\n  return Math.max(...players)\n}\n\nrun({\n  part1: {\n    tests: [\n      { input: `9 players; last marble is worth 25 points`, expected: 32 },\n      { input: `10 players; last marble is worth 1618 points`, expected: 8317 },\n      {\n        input: `13 players; last marble is worth 7999 points`,\n        expected: 146373,\n      },\n      { input: `17 players; last marble is worth 1104 points`, expected: 2764 },\n      {\n        input: `21 players; last marble is worth 6111 points`,\n        expected: 54718,\n      },\n      {\n        input: `30 players; last marble is worth 5807 points`,\n        expected: 37305,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      // { input: ``, expected: \"\" },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n})\n"],
  "mappings": "AAAA;AAEA,MAAM,aAAa,CAAC,aAClB,SAAS,MAAM,KAAK,OAAO,QAAQ,IAAI;AAEzC,aAAa;AAAA,EAIX,YAAY,OAAe;AACzB,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA;AAAA,EAEd,OAAO,QAAsB;AAC3B,SAAK,KAAK,OAAO;AACjB,WAAO,OAAO,KAAK;AACnB,WAAO,OAAO;AACd,SAAK,OAAO;AAAA;AAAA,EAEd,UAAgB;AACd,SAAK,KAAK,OAAO,KAAK;AACtB,SAAK,KAAK,OAAO,KAAK;AAAA;AAAA;AAG1B,aAAa;AAAA,EAIX,cAAc;AACZ,SAAK,gBAAgB,IAAI,OAAO;AAChC,SAAK,OAAO,KAAK;AAAA;AAAA,EAGnB,IAAI,QAAwB;AAC1B,QAAI,SAAS,OAAO,GAAG;AACrB,YAAM,iBACJ,KAAK,cAAc,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACnD,WAAK,gBAAgB,eAAe;AACpC,YAAM,UAAU,eAAe;AAC/B,qBAAe;AACf,aAAO,SAAS;AAAA;AAElB,UAAM,iBAAiB,IAAI,OAAO;AAClC,UAAM,OAAO,KAAK,cAAc;AAChC,SAAK,OAAO;AACZ,SAAK,gBAAgB;AACrB,WAAO;AAAA;AAAA;AAGX,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,CAAC,cAAc,gBAAgB,WAAW;AAChD,QAAM,UAAU,IAAI,MAAM,cAAc,KAAK;AAC7C,QAAM,SAAS,IAAI;AACnB,WAAS,SAAS,GAAG,UAAU,cAAc,UAAU;AACrD,UAAM,SAAS,SAAS;AACxB,YAAQ,WAAW,OAAO,IAAI;AAAA;AAEhC,SAAO,KAAK,IAAI,GAAG;AAAA;AAGrB,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,CAAC,cAAc,gBAAgB,WAAW;AAChD,QAAM,UAAU,IAAI,MAAM,cAAc,KAAK;AAC7C,QAAM,SAAS,IAAI;AACnB,WAAS,SAAS,GAAG,UAAU,eAAe,KAAK,UAAU;AAC3D,UAAM,SAAS,SAAS;AACxB,YAAQ,WAAW,OAAO,IAAI;AAAA;AAEhC,SAAO,KAAK,IAAI,GAAG;AAAA;AAGrB,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL,EAAE,OAAO,6CAA6C,UAAU;AAAA,MAChE,EAAE,OAAO,gDAAgD,UAAU;AAAA,MACnE;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA;AAAA,MAEZ,EAAE,OAAO,gDAAgD,UAAU;AAAA,MACnE;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA;AAAA,MAEZ;AAAA,QACE,OAAO;AAAA,QACP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO;AAAA,IAGP,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
