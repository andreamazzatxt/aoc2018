{
  "version": 3,
  "sources": ["../../src/day04/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\"\n\nconst parseInput = (rawInput: string) =>\n  rawInput.split(\"\\n\").map((entry) => {\n    const date = entry.slice(1, 11)\n    const minutes = entry.slice(15, 17)\n    return {\n      completeDate: new Date(date + \"  00:\" + minutes),\n      date,\n      minutes,\n      guard: entry.includes(\"begins\")\n        ? entry.slice(26, entry.indexOf(\"begins\") - 1)\n        : \"\",\n      fallAsleep: entry.includes(\"falls\"),\n      wakesUp: entry.includes(\"wakes\"),\n    }\n  })\n\nconst sortByTime = (input: any) => {\n  return input.sort((a, b) => {\n    if (a.completeDate < b.completeDate) return -1\n    if (a.completeDate > b.completeDate) return 1\n    return 0\n  })\n}\n\nconst parseShifts = (sortedInput) => {\n  const guards = {}\n  let currentGuard = \"\"\n  let lastFallAsleep = 0\n\n  sortedInput.forEach((entry) => {\n    if (entry.guard !== \"\") {\n      currentGuard = entry.guard\n      guards[currentGuard] = guards[currentGuard] || {\n        minutesSleeping: Array(60).fill(0),\n      }\n      lastFallAsleep = 0\n    }\n    if (entry.fallAsleep) {\n      lastFallAsleep = parseInt(entry.minutes)\n    }\n\n    if (entry.wakesUp && lastFallAsleep) {\n      for (let i = lastFallAsleep; i < entry.minutes; i++) {\n        guards[currentGuard].minutesSleeping[i]++\n      }\n      lastFallAsleep = 0\n    }\n  })\n  return guards\n}\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n  const sortedInput = sortByTime(input)\n  const shifts = parseShifts(sortedInput)\n  const array = Object.keys(shifts).map((guard: any) => {\n    return {\n      id: guard,\n      minutesSleeping: shifts[guard].minutesSleeping.reduce((a, b) => a + b, 0),\n      maxMinute: shifts[guard].minutesSleeping.indexOf(\n        Math.max(...shifts[guard].minutesSleeping),\n      ),\n    }\n  })\n  console.table(array)\n  const sleepiestGuard = array.reduce((a, b) => {\n    return a.minutesSleeping > b.minutesSleeping ? a : b\n  })\n  return parseInt(sleepiestGuard.id) * sleepiestGuard.maxMinute\n}\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n  const shifts = parseShifts(sortByTime(input))\n  let maxMinute = 0\n  let maxMinuteGuard = \"\"\n  let maxMinuteCount = 0\n  Object.keys(shifts).forEach((guard) => {\n    const minutes = shifts[guard].minutesSleeping\n    const max = Math.max(...minutes)\n    if (max > maxMinuteCount) {\n      maxMinuteCount = max\n      maxMinuteGuard = guard\n      maxMinute = minutes.indexOf(max)\n    }\n  })\n  return parseInt(maxMinuteGuard) * maxMinute\n}\n\nrun({\n  part1: {\n    tests: [\n      // { input: ``, expected: \"\" },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      // { input: ``, expected: \"\" },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n})\n"],
  "mappings": "AAAA;AAEA,MAAM,aAAa,CAAC,aAClB,SAAS,MAAM,MAAM,IAAI,CAAC,UAAU;AAClC,QAAM,OAAO,MAAM,MAAM,GAAG;AAC5B,QAAM,UAAU,MAAM,MAAM,IAAI;AAChC,SAAO;AAAA,IACL,cAAc,IAAI,KAAK,OAAO,UAAU;AAAA,IACxC;AAAA,IACA;AAAA,IACA,OAAO,MAAM,SAAS,YAClB,MAAM,MAAM,IAAI,MAAM,QAAQ,YAAY,KAC1C;AAAA,IACJ,YAAY,MAAM,SAAS;AAAA,IAC3B,SAAS,MAAM,SAAS;AAAA;AAAA;AAI9B,MAAM,aAAa,CAAC,UAAe;AACjC,SAAO,MAAM,KAAK,CAAC,GAAG,MAAM;AAC1B,QAAI,EAAE,eAAe,EAAE;AAAc,aAAO;AAC5C,QAAI,EAAE,eAAe,EAAE;AAAc,aAAO;AAC5C,WAAO;AAAA;AAAA;AAIX,MAAM,cAAc,CAAC,gBAAgB;AACnC,QAAM,SAAS;AACf,MAAI,eAAe;AACnB,MAAI,iBAAiB;AAErB,cAAY,QAAQ,CAAC,UAAU;AAC7B,QAAI,MAAM,UAAU,IAAI;AACtB,qBAAe,MAAM;AACrB,aAAO,gBAAgB,OAAO,iBAAiB;AAAA,QAC7C,iBAAiB,MAAM,IAAI,KAAK;AAAA;AAElC,uBAAiB;AAAA;AAEnB,QAAI,MAAM,YAAY;AACpB,uBAAiB,SAAS,MAAM;AAAA;AAGlC,QAAI,MAAM,WAAW,gBAAgB;AACnC,eAAS,IAAI,gBAAgB,IAAI,MAAM,SAAS,KAAK;AACnD,eAAO,cAAc,gBAAgB;AAAA;AAEvC,uBAAiB;AAAA;AAAA;AAGrB,SAAO;AAAA;AAGT,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,cAAc,WAAW;AAC/B,QAAM,SAAS,YAAY;AAC3B,QAAM,QAAQ,OAAO,KAAK,QAAQ,IAAI,CAAC,UAAe;AACpD,WAAO;AAAA,MACL,IAAI;AAAA,MACJ,iBAAiB,OAAO,OAAO,gBAAgB,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG;AAAA,MACvE,WAAW,OAAO,OAAO,gBAAgB,QACvC,KAAK,IAAI,GAAG,OAAO,OAAO;AAAA;AAAA;AAIhC,UAAQ,MAAM;AACd,QAAM,iBAAiB,MAAM,OAAO,CAAC,GAAG,MAAM;AAC5C,WAAO,EAAE,kBAAkB,EAAE,kBAAkB,IAAI;AAAA;AAErD,SAAO,SAAS,eAAe,MAAM,eAAe;AAAA;AAGtD,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,SAAS,YAAY,WAAW;AACtC,MAAI,YAAY;AAChB,MAAI,iBAAiB;AACrB,MAAI,iBAAiB;AACrB,SAAO,KAAK,QAAQ,QAAQ,CAAC,UAAU;AACrC,UAAM,UAAU,OAAO,OAAO;AAC9B,UAAM,MAAM,KAAK,IAAI,GAAG;AACxB,QAAI,MAAM,gBAAgB;AACxB,uBAAiB;AACjB,uBAAiB;AACjB,kBAAY,QAAQ,QAAQ;AAAA;AAAA;AAGhC,SAAO,SAAS,kBAAkB;AAAA;AAGpC,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,IAGP,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO;AAAA,IAGP,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
