{
  "version": 3,
  "sources": ["../../src/day05/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\"\n\nconst parseInput = (rawInput: string) => rawInput.split(\"\")\n\nconst react = (input: string[]) => {\n  let i = 0\n  while (i < input.length - 1) {\n    if (\n      input[i] !== input[i + 1] &&\n      input[i].toLowerCase() === input[i + 1].toLowerCase()\n    ) {\n      input.splice(i, 2)\n      i = 0\n    } else {\n      i++\n    }\n  }\n  return input\n}\n\nconst fullyReact = (input: string[]) => {\n  let result = react(input)\n  while (true) {\n    const temp = react(result)\n    if (temp.length === result.length) break\n    result = react(input)\n  }\n  return result\n}\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n  let result = fullyReact(input)\n  return result.length\n}\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n  const polymers = [...new Set(input.map((char) => char.toLowerCase()))]\n  let shortest\n  polymers.forEach((polymer) => {\n    console.log(polymer)\n    const temp = input.filter((char) => char.toLowerCase() !== polymer)\n    const result = fullyReact(temp)\n    if (!shortest || result.length < shortest) shortest = result.length\n  })\n  return shortest\n}\n\nrun({\n  part1: {\n    tests: [\n      // { input: ``, expected: \"\" },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      // { input: ``, expected: \"\" },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n})\n"],
  "mappings": "AAAA;AAEA,MAAM,aAAa,CAAC,aAAqB,SAAS,MAAM;AAExD,MAAM,QAAQ,CAAC,UAAoB;AACjC,MAAI,IAAI;AACR,SAAO,IAAI,MAAM,SAAS,GAAG;AAC3B,QACE,MAAM,OAAO,MAAM,IAAI,MACvB,MAAM,GAAG,kBAAkB,MAAM,IAAI,GAAG,eACxC;AACA,YAAM,OAAO,GAAG;AAChB,UAAI;AAAA,WACC;AACL;AAAA;AAAA;AAGJ,SAAO;AAAA;AAGT,MAAM,aAAa,CAAC,UAAoB;AACtC,MAAI,SAAS,MAAM;AACnB,SAAO,MAAM;AACX,UAAM,OAAO,MAAM;AACnB,QAAI,KAAK,WAAW,OAAO;AAAQ;AACnC,aAAS,MAAM;AAAA;AAEjB,SAAO;AAAA;AAET,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,MAAI,SAAS,WAAW;AACxB,SAAO,OAAO;AAAA;AAGhB,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,WAAW,CAAC,GAAG,IAAI,IAAI,MAAM,IAAI,CAAC,SAAS,KAAK;AACtD,MAAI;AACJ,WAAS,QAAQ,CAAC,YAAY;AAC5B,YAAQ,IAAI;AACZ,UAAM,OAAO,MAAM,OAAO,CAAC,SAAS,KAAK,kBAAkB;AAC3D,UAAM,SAAS,WAAW;AAC1B,QAAI,CAAC,YAAY,OAAO,SAAS;AAAU,iBAAW,OAAO;AAAA;AAE/D,SAAO;AAAA;AAGT,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,IAGP,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO;AAAA,IAGP,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
